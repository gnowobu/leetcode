class Solution {
    public int threeSumClosest(int[] nums, int target) {
        
        if(nums == null || nums.length == 0) return 0;
        
        Arrays.sort(nums);
        
        int i, j, k, min, sum, result, previous_min;
        
        result = 0;
        i = 0;
        j = 1;
        k = nums.length - 1;
        result = nums[i] + nums[j] + nums[k]; // set a default value for result(nums[0] + nums[1] + nums[length - 1])
        min = Math.abs(target - result); // set default value for min
        
        for(; i < nums.length - 2; i++){
           
            if(i > 0 && nums[i] == nums[i-1]) continue;
           
            j = i + 1;
            k = nums.length - 1;
            
            while(j < k){    
               
                sum = nums[i] + nums[j] + nums[k];
                if(sum == target) return sum; 
                previous_min = min;
                min = Math.min(min,Math.abs(target - sum)); //use min to record the abs value
                if(min < previous_min) result = sum; //update the value of closest combination
                
                if(sum > target) k--;
                if(sum < target) j++;
                
                
            }
        
         }
        return result;
                  
    }
}
