class Solution {
    public List<String> generateParenthesis(int n) {
        
        List<String> result = new ArrayList();
        String cur = "";
        backtrack(result, cur, 0, 0, n);
        return result;
    }
    
    public void backtrack(List<String> result, String cur, int left, int right, int max){
        
        if(cur.length() == max * 2) { // base case
            result.add(cur);
            return;
        }
        
        if(left < max) backtrack(result, cur + "(", left + 1, right, max);
        if(right < left) backtrack(result, cur + ")", left, right + 1, max);
        
    }
}
